#pragma once

namespace ISO226
{
    // ISO 226:2003 standard frequencies (31 points)
    constexpr int NUM_FREQUENCIES = 31;
    const float FREQUENCIES[NUM_FREQUENCIES] = {
        20.0f, 25.0f, 31.5f, 40.0f, 50.0f, 63.0f, 80.0f, 100.0f, 125.0f, 160.0f,
        200.0f, 250.0f, 315.0f, 400.0f, 500.0f, 630.0f, 800.0f, 1000.0f, 1250.0f, 1600.0f,
        2000.0f, 2500.0f, 3150.0f, 4000.0f, 5000.0f, 6300.0f, 8000.0f, 10000.0f, 12500.0f, 16000.0f, 20000.0f
    };

    // ISO 226:2003 equal-loudness contours (dB SPL)
    // Format: [phon_level][frequency_index]
    constexpr int NUM_PHON_LEVELS = 9;
    const float PHON_LEVELS[NUM_PHON_LEVELS] = { 20.0f, 30.0f, 40.0f, 50.0f, 60.0f, 70.0f, 80.0f, 90.0f, 100.0f };
    
    const float CURVES[NUM_PHON_LEVELS][NUM_FREQUENCIES] = {
        // 20 phon
        {74.3f, 64.4f, 56.3f, 49.5f, 44.7f, 40.6f, 37.5f, 35.0f, 33.1f, 31.6f,
         30.2f, 28.9f, 27.7f, 26.6f, 25.6f, 24.7f, 23.8f, 22.5f, 21.2f, 20.3f,
         19.1f, 18.1f, 17.2f, 16.3f, 15.0f, 13.4f, 11.5f, 10.4f, 10.1f, 11.2f, 13.4f},
        
        // 30 phon
        {86.3f, 75.3f, 66.2f, 58.4f, 52.7f, 48.0f, 44.4f, 41.3f, 39.2f, 37.3f,
         35.7f, 34.2f, 32.9f, 31.7f, 30.6f, 29.5f, 28.4f, 27.1f, 25.8f, 24.7f,
         23.3f, 22.1f, 21.0f, 19.9f, 18.2f, 16.1f, 14.6f, 13.6f, 13.3f, 14.6f, 17.1f},
        
        // 40 phon
        {96.9f, 85.4f, 76.3f, 68.3f, 62.1f, 57.0f, 52.5f, 48.7f, 46.2f, 44.0f,
         42.1f, 40.4f, 38.9f, 37.5f, 36.3f, 35.1f, 33.9f, 32.6f, 31.2f, 29.9f,
         28.4f, 27.1f, 25.9f, 24.7f, 22.9f, 20.7f, 19.0f, 17.8f, 17.3f, 18.6f, 21.4f},
        
        // 50 phon
        {107.6f, 95.6f, 86.4f, 78.3f, 71.1f, 65.0f, 60.1f, 56.1f, 53.4f, 51.0f,
         48.9f, 47.1f, 45.4f, 43.8f, 42.3f, 40.9f, 39.4f, 38.1f, 36.6f, 35.1f,
         33.4f, 32.0f, 30.6f, 29.2f, 27.4f, 25.1f, 23.4f, 22.1f, 21.6f, 22.8f, 25.8f},
        
        // 60 phon
        {118.6f, 106.1f, 96.8f, 88.4f, 81.3f, 75.0f, 69.2f, 65.1f, 62.2f, 59.6f,
         57.3f, 55.3f, 53.5f, 51.7f, 50.1f, 48.6f, 47.0f, 45.6f, 44.0f, 42.3f,
         40.5f, 38.9f, 37.3f, 35.6f, 33.7f, 31.3f, 29.6f, 28.3f, 27.9f, 29.1f, 32.3f},
        
        // 70 phon
        {129.5f, 116.9f, 107.1f, 98.3f, 91.2f, 84.7f, 78.5f, 74.2f, 71.1f, 68.2f,
         65.7f, 63.5f, 61.5f, 59.6f, 57.9f, 56.2f, 54.5f, 53.0f, 51.3f, 49.5f,
         47.6f, 45.8f, 44.1f, 42.3f, 40.1f, 37.7f, 35.9f, 34.6f, 34.3f, 35.4f, 38.7f},
        
        // 80 phon
        {139.9f, 127.3f, 117.5f, 108.6f, 101.4f, 94.8f, 88.4f, 83.9f, 80.7f, 77.6f,
         74.9f, 72.6f, 70.4f, 68.3f, 66.4f, 64.6f, 62.8f, 61.1f, 59.3f, 57.4f,
         55.3f, 53.4f, 51.4f, 49.5f, 47.2f, 44.8f, 43.0f, 41.7f, 41.2f, 42.2f, 45.6f},
        
        // 90 phon
        {150.2f, 137.5f, 127.7f, 118.7f, 111.4f, 104.8f, 98.4f, 93.8f, 90.4f, 87.1f,
         84.2f, 81.7f, 79.4f, 77.1f, 75.1f, 73.3f, 71.4f, 69.6f, 67.6f, 65.6f,
         63.5f, 61.5f, 59.5f, 57.4f, 55.1f, 52.7f, 50.8f, 49.4f, 48.8f, 49.8f, 53.2f},
        
        // 100 phon
        {160.4f, 147.6f, 137.8f, 128.8f, 121.4f, 114.8f, 108.3f, 103.7f, 100.3f, 96.9f,
         93.9f, 91.4f, 88.9f, 86.6f, 84.5f, 82.5f, 80.5f, 78.6f, 76.6f, 74.5f,
         72.4f, 70.3f, 68.3f, 66.2f, 63.9f, 61.4f, 59.5f, 58.1f, 57.5f, 58.5f, 62.0f}
    };
    
    // Find 1kHz index for normalization
    inline int get1kHzIndex() {
        for (int i = 0; i < NUM_FREQUENCIES; ++i) {
            if (FREQUENCIES[i] == 1000.0f) {
                return i;
            }
        }
        return 17; // Default fallback (should be 17)
    }
}